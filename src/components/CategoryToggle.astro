---
import { CATEGORIES } from "../lib/contentful";
import "../styles/category-toggle.css";

export interface Props {
  activeCategory: string;
  availableCategories: Record<string, number>;
}

const { activeCategory, availableCategories } = Astro.props;
---

<div class="category-toggle-container">
  <div class="category-toggle">
    {
      CATEGORIES.map((category) => {
        const isActive = activeCategory === category.id;
        const isDisabled = availableCategories[category.id] === 0;
        const href = category.id === "all" ? "/" : `/categories/${category.id}`;
        return (
          <a
            href={isDisabled ? "#" : href}
            class={`category-option ${isActive ? "active" : ""} ${isDisabled ? "disabled" : ""}`}
            data-category={category.id}
            aria-disabled={isDisabled}
          >
            {category.label}
          </a>
        );
      })
    }
    <div class="slider init"></div>
  </div>
</div>

<script>
  // Calculate initial position for the slider
  function updateSlider() {
    const activeOption = document.querySelector(
      ".category-option.active"
    ) as HTMLElement;
    const slider = document.querySelector(".slider") as HTMLElement;

    if (activeOption && slider) {
      slider.style.width = `${activeOption.offsetWidth}px`;
      slider.style.left = `${activeOption.offsetLeft}px`;
    } else if (slider) {
      // If no active option is found, default to the first option
      const firstOption = document.querySelector(
        ".category-option"
      ) as HTMLElement;
      if (firstOption) {
        slider.style.width = `${firstOption.offsetWidth}px`;
        slider.style.left = `${firstOption.offsetLeft}px`;
      }
    }
  }

  // Initialize the slider position when the DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    const slider = document.querySelector(".slider");
    updateSlider(); // Set initial position based on active category
    slider && slider.getBoundingClientRect(); // Force layout calculation
    slider && slider.classList.remove("init"); // Enable smooth transitions
  });

  window.addEventListener("resize", updateSlider);
</script>
